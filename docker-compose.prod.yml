services:
  postgres-auth:
    image: postgres:16-alpine
    container_name: hostyourbot-postgres-auth-prod
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-auth-data:/var/lib/postgresql/data
    restart: unless-stopped

  auth-service:
    build:
      context: ./auth-service
      target: production
    container_name: hostyourbot-auth-service-prod
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=postgres-auth
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - postgres-auth
    restart: unless-stopped

  logs-service:
    build:
      context: ./logs-service
      target: production
    container_name: hostyourbot-logs-service-prod
    ports:
      - "3002:3002"
    volumes:
      - logs-data:/root/data
    environment:
      - ENVIRONMENT=production
      - PORT=3002
      - DATABASE_PATH=/root/data/logs.db
    restart: unless-stopped

  client:
    build:
      context: ./client
      target: production
    container_name: hostyourbot-client-prod
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    restart: unless-stopped

volumes:
  postgres-auth-data:
  logs-data:
