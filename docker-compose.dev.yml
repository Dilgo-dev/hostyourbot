services:
  postgres-auth:
    image: postgres:16-alpine
    container_name: hostyourbot-postgres-auth-dev
    environment:
      - POSTGRES_DB=auth_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-auth-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d auth_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  auth-service:
    build:
      context: ./auth-service
      target: development
    container_name: hostyourbot-auth-service-dev
    ports:
      - "3001:3001"
    volumes:
      - ./auth-service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=postgres-auth
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=auth_db
      - JWT_SECRET=dev_secret_key_change_in_production
      - NODE_OPTIONS=--max-old-space-size=512
      - CLIENT_URL=http://localhost:5174
      - LOGS_GRPC_URL=logs-service:50052
    depends_on:
      postgres-auth:
        condition: service_healthy
    restart: unless-stopped

  logs-service:
    build:
      context: ./logs-service
      target: development
    container_name: hostyourbot-logs-service-dev
    ports:
      - "3002:3002"
      - "50052:50052"
    volumes:
      - ./logs-service:/app
      - logs-data:/app/data
    environment:
      - ENVIRONMENT=development
      - PORT=3002
      - GRPC_PORT=50052
      - DATABASE_PATH=/app/data/logs.db
    restart: unless-stopped

  k8s-service:
    build:
      context: ./k8s-service
      target: development
    container_name: hostyourbot-k8s-service-dev
    ports:
      - "3003:3003"
    volumes:
      - ./k8s-service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - ENVIRONMENT=development
      - PORT=3003
      - K8S_API_URL=${K8S_API_URL}
      - K8S_API_TOKEN=${K8S_API_TOKEN}
    restart: unless-stopped

  client:
    build:
      context: ./client
      target: development
    container_name: hostyourbot-client-dev
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    stdin_open: true
    tty: true
    restart: unless-stopped

volumes:
  postgres-auth-data:
  logs-data:
